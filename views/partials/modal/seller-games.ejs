<!-- Add Game Modal -->
<div
  class="modal fade"
  id="addGameModal"
  tabindex="-1"
  aria-labelledby="addGameModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addGameModalLabel">Add New Game</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <div class="alert d-none" role="alert"></div>

        <form id="addGameForm">
          <div class="mb-3">
            <label for="addGameId" class="form-label">Game ID (slug)</label>
            <input
              type="text"
              class="form-control"
              id="addGameId"
              name="slug"
              required
            />
          </div>
          <div class="mb-3">
            <label for="title" class="form-label">Game Title</label>
            <input
              type="text"
              class="form-control"
              id="title"
              name="title"
              required
            />
          </div>
          <div class="mb-3">
            <label for="description" class="form-label">Game Description</label>
            <textarea
              class="form-control"
              id="description"
              name="description"
              rows="3"
              required
            ></textarea>
          </div>
          <div class="mb-3">
            <label for="imageUrl" class="form-label">Image URL</label>
            <input
              type="url"
              class="form-control"
              id="imageUrl"
              name="imageUrl"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">Add Game</button>
        </form>
      </div>
    </div>
  </div>
</div>
<!-- Edit Game Modal -->
<div
  class="modal fade"
  id="editGameModal"
  tabindex="-1"
  aria-labelledby="editGameModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editGameModalLabel">Edit Game</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <div class="alert d-none" role="alert"></div>
        <form id="editGameForm">
          <div class="mb-3">
            <label for="editGameId" class="form-label">Game ID (slug)</label>
            <input
              type="text"
              class="form-control"
              id="editGameId"
              name="slug"
              readonly
            />
          </div>
          <div class="mb-3">
            <label for="editTitle" class="form-label">Game Title</label>
            <input
              type="text"
              class="form-control"
              id="editTitle"
              name="title"
              required
            />
          </div>
          <div class="mb-3">
            <label for="editDescription" class="form-label">Description</label>
            <textarea
              class="form-control"
              id="editDescription"
              name="description"
              rows="3"
            ></textarea>
          </div>
          <div class="mb-3">
            <label for="editImageUrl" class="form-label">Image URL</label>
            <input
              type="url"
              class="form-control"
              id="editImageUrl"
              name="imageUrl"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Delete Game Modal -->
<div
  class="modal fade"
  id="deleteGameModal"
  tabindex="-1"
  aria-labelledby="deleteGameModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteGameModalLabel">Delete Game</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <div class="alert d-none" role="alert"></div>
        <p id="deleteGameMessage"></p>
        <form id="deleteGameForm">
          <input type="hidden" id="deleteGameId" name="slug" />
          <button type="submit" class="btn btn-danger">Delete</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    /**
     * @param {HTMLFormElement} form
     * @param {()=> Promise<Response>} fetchFn
     */
    const fetchWithAlert = async (form, fetchFn) => {
      const alertMessage = form.parentElement.querySelector(".alert");
      try {
        const response = await fetchFn();
        const result = await response.json();
        // Handle response
        if (alertMessage) {
          alertMessage.classList.remove(
            "d-none",
            "alert-success",
            "alert-danger"
          );
          alertMessage.classList.add(
            result.success ? "alert-success" : "alert-danger"
          );
          alertMessage.textContent = result.message;
        }

        if (result.success) {
          // Refresh game list if successful
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        }
      } catch (error) {
        console.error("Error submitting form:", error);
        if (alertMessage) {
          alertMessage.classList.remove("d-none", "alert-success");
          alertMessage.classList.add("alert-danger");
          alertMessage.textContent =
            "An error occurred. Please try again later.";
        }
      }
    };

    document
      .getElementById("addGameForm")
      .addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent default form submission

        const form = event.target;
        const formData = new FormData(form);

        // Prepare data for the POST request
        const payload = Object.fromEntries(formData.entries());

        fetchWithAlert(form, async () => {
          // Send POST request to the server
          return await fetch("/seller/games", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
          });
        });
      });

    document
      .getElementById("editGameForm")
      .addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent default form submission

        const form = event.target;
        const formData = new FormData(form);

        // Prepare data for the POST request
        const payload = Object.fromEntries(formData.entries());

        fetchWithAlert(form, async () => {
          // Send POST request to the server
          return await fetch("/seller/games/edit", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
          });
        });
      });

    document
      .getElementById("deleteGameForm")
      .addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent default form submission

        const form = event.target;
        const formData = new FormData(form);

        // Prepare data for the POST request
        const payload = Object.fromEntries(formData.entries());

        fetchWithAlert(form, async () => {
          // Send POST request to the server
          return await fetch("/seller/games/delete", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
          });
        });
      });

    const editGameButton = document.getElementsByClassName("edit-game-button");
    for (const button of editGameButton) {
      button.addEventListener("click", (event) => {
        const slug = button.dataset.slug;

        // Find the game in the injected `games` array
        const game = games.find((g) => g.slug === slug);
        if (game) {
          // Populate edit modal
          document.getElementById("editGameId").value = game.slug;
          document.getElementById("editTitle").value = game.title;
          document.getElementById("editDescription").value =
            game.description || "";
          document.getElementById("editImageUrl").value = game.imageUrl;
        } else {
          alert("Game not found!");
        }
      });
    }

    const deleteGameButton =
      document.getElementsByClassName("delete-game-button");
    for (const button of deleteGameButton) {
      button.addEventListener("click", (event) => {
        const slug = button.dataset.slug;

        // Find the game in the injected `games` array
        const game = games.find((g) => g.slug === slug);
        if (game) {
          // Populate delete modal
          document.getElementById("deleteGameId").value = game.slug;
          document.getElementById(
            "deleteGameMessage"
          ).textContent = `Are you sure you want to delete ${game.title}?`;
        } else {
          alert("Game not found!");
        }
      });
    }
  });
</script>
