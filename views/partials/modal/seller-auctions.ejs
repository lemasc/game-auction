<div
  class="modal fade"
  id="createAuctionModal"
  tabindex="-1"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="createAuctionForm">
        <div class="modal-header">
          <h5 class="modal-title">Create Auction</h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
        <div class="modal-body">
          <div class="alert d-none" role="alert"></div>
          <div class="mb-3">
            <label for="gameId" class="form-label">Game</label>
            <select id="gameId" name="gameId" class="form-select">
              <% games.forEach(game => { %>
              <option value="<%= game.slug %>"><%= game.title %></option>
              <% }) %>
            </select>
          </div>
          <div class="mb-3">
            <label for="amount" class="form-label">Starting Amount</label>
            <input
              type="number"
              id="amount"
              name="amount"
              class="form-control"
              required
            />
          </div>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal"
          >
            Close
          </button>
          <button type="submit" class="btn btn-primary">Create Auction</button>
        </div>
      </form>
    </div>
  </div>
</div>
<div
  class="modal fade"
  id="deleteAuctionModal"
  tabindex="-1"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="deleteAuctionForm">
        <div class="modal-header">
          <h5 class="modal-title">Delete Auction</h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
        <div class="modal-body">
          <div class="alert d-none" role="alert"></div>
          <input type="hidden" id="deleteAuctionId" name="id" />
          <p id="deleteAuctionMessage"></p>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal"
          >
            Close
          </button>
          <button type="submit" class="btn btn-danger">Delete Auction</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    /**
     * @param {HTMLFormElement} form
     * @param {()=> Promise<Response>} fetchFn
     */
    const fetchWithAlert = async (form, fetchFn) => {
      const alertMessage = form.parentElement.querySelector(".alert");
      try {
        const response = await fetchFn();
        const result = await response.json();
        // Handle response
        if (alertMessage) {
          alertMessage.classList.remove(
            "d-none",
            "alert-success",
            "alert-danger"
          );
          alertMessage.classList.add(
            result.success ? "alert-success" : "alert-danger"
          );
          alertMessage.textContent = result.message;
        }

        if (result.success) {
          // Refresh game list if successful
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        }
      } catch (error) {
        console.error("Error submitting form:", error);
        if (alertMessage) {
          alertMessage.classList.remove("d-none", "alert-success");
          alertMessage.classList.add("alert-danger");
          alertMessage.textContent =
            "An error occurred. Please try again later.";
        }
      }
    };

    document
      .getElementById("createAuctionForm")
      .addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent default form submission

        const form = event.target;
        const formData = new FormData(form);

        // Prepare data for the POST request
        const payload = Object.fromEntries(formData.entries());

        fetchWithAlert(form, async () => {
          // Send POST request to the server
          return await fetch("/seller/auctions/create", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
          });
        });
      });

    document
      .getElementById("deleteAuctionForm")
      .addEventListener("submit", async (event) => {
        event.preventDefault(); // Prevent default form submission

        const form = event.target;
        const formData = new FormData(form);

        // Prepare data for the POST request
        const payload = Object.fromEntries(formData.entries());

        fetchWithAlert(form, async () => {
          // Send POST request to the server
          return await fetch("/seller/auctions/delete", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload),
          });
        });
      });

    const deleteAuctionButton = document.getElementsByClassName(
      "delete-auction-button"
    );
    for (const button of deleteAuctionButton) {
      button.addEventListener("click", (event) => {
        const slug = button.dataset.slug;
        const id = button.dataset.id;
        const auction = auctions.find((a) => a.id === id);
        console.log(auction);

        if (auction) {
          const game = games.find((g) => g.slug === auction.gameId) ?? {
            title: "Unknown Game",
          };
          // Populate delete modal
          document.getElementById("deleteAuctionId").value = id;
          document.getElementById(
            "deleteAuctionMessage"
          ).textContent = `Are you sure you want to delete auction "${game.title}"?`;
        } else {
          alert("Game not found!");
        }
      });
    }
  });
</script>
